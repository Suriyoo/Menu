Individual Feedback for "Practical/Lab Report 2"

Section 1
Your data models are clean and make use of private of the fields well done. Your fields could have been improved by making the decision if they are immutable or not by including the final keyword.

You should have included some comments in this class that describe the purpose of the class, method level comments for the description of the instance printing methods, and a declaration at the header of the class stating that you are the author and what the purpose of the whole class is.

For the user class, you should have stored the age as an int not a stringbuffer

You are missing an instance printing method for user

You are missing an instance printing method for event

You are missing an instance printing method for establishment



Section 2
Generally a good section, but there are some improvements.

Your arraylists in the controller should be private

There should be no printing methods inside of the controller class.

Everything is static. You use static whenever a method is not dependent on the instance creation and it not using an instance variable. You use static when a piece of code can be shared by all instances. Lastly you generally use static methods for utility classes.

You should have included 2 constructors, 1 of which included a parameter for the file name. This file name could have then been used to read in the file from the system. The second constructor could have been included for static reading in of the file from the system.

Your adding methods are too complex. You just needed to check if the object already existed in the arraylist and then add the object or not

Why do you have additional ArrayLists in the Io class



Section 3
Generally good, you have all the right options in the menu and they generally work fine. Your methods are really long which affects readability. I suggest breaking down large complex methods into separate private methods to improve the readability of the code. Your run menu could have been private too, as the only class that needs to run the method is the IO clas

Methods are your friends, and they are cheap to create and run. Whilst you have your validity checks built into the recording methods, you should have had dedicated methods for the validity checking. Doing this helps improve the readability of your code

Similar, print events and print establishments should have their own dedicated methods



Section 4
Generally your filters are good, but they could be improved. Here is an example of Filtering method

public ArrayList<Event> filterUsersAtEstablishment(String establishmentName) {

    ArrayList<Event> filtered = new ArrayList<>();

    for (Event e : events) {
        if (e.getEstablishment().getName().equalsIgnoreCase(establishmentName)) {
            filtered.add(e);
        }
    }
    return filtered;
}

Generally a good implementation, well done.



Reflective Report
Generally a good reflective report, you talk about the problems with the assessment, how you have overcome them, and what your plans for improving for the future are. Well done.



Mr JA Barnes



----------------

In fact, it goes well when printing out the age information, so I think there is no difference between using the age as an int or a string.

This is incorrect logic, an age is a numerical value, therefore the most appropriate type for it to be represented by is an integer. Therefore a stringbuffer is not an appropriate type – especially considering that I didn’t teach you to use this.
 

But I had a behavior method in each class above, and they can be outputted to console as you required by using an instance object.

This is also incorrect, you have methods that print the instance details to the console inside of the event, establishment, and user classes. I explicitly stated in the specification that no system.out.println statements should be in those classes. This method was expected to return a formatted string from the method to a place in which the method was invoked from
 

 

However, when I run the controller class, the console did not output anything. After careful inspection, I found I put my add event method and add establishment method are in this controller class to prevent the IO class from being too crowded. I am not sure if you are referring to these two adding methods. In fact, running the controller class directly cannot output any information.

 

There are multiple occurrences of system.println statements in the Controller class. This is deemed as output. There should be no output at all in the controller class, and therefore my original comment still stands.